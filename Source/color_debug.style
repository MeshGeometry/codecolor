PPPPPPPP LLLLLLLLLLLLLLL
PPPPPPPP LLLLLLLLLLLLLLLLL
PPPPPPPP LLLLLLLLLLL
PPPPPPPP LLLLLLLLLLLLLLLLLLLL

MMMMMMMMMMMMMMMMMMMMMMMM(Context* context) : Object(context)
{

}

PODVector<KKKKKKKK> MMMMMMMMMMMMMMMMMMMMMMMMMMMM(String& text)
{
	PODVector<KKKKKKKK> unicodeText_;
	FFF (KKKKKKKK i = 0; i < text.Length();)
		unicodeText_.Push(text.NextUTF8Char(i));

	KKKKKK unicodeText_;
}

KKKK MMMMMMMMMMMMMMMMMMMMMMMMMMMMMM(String path, PODVector<KKKKKKKK>& code)
{
	FileSystem* fs = GetSubsystem<FileSystem>();
	code.Clear();
	FF (fs->FileExists(path))
	{
		File* file = new File(GetContext(), path, FILE_READ);

		CCCCCCCCCCCCCCCCCCCCCCCCC
		code.Resize(file->GetSize());
		file->Read(&code[0], code.Size());

		file->Close();
	}
}

KKKK MMMMMMMMMMMMMMMMMMMMMMMMMMM(String path, PODVector<KKKKKKKK>& styles)
{
	File* file = new File(GetContext(), path, FILE_WRITE);
	KKK counter = 0;
	String line = LL;
	FFFFF (counter < styles.Size())
	{
		char c = styles[counter];
		FF (c != '\n')
		{
			line.AppendUTF8(c);
		}
		FFFF
		{
			file->WriteLine(line);
			line = LL;
		}

		counter++;
	}

	file->Close();
}

PODVector<KKKKKKKK> MMMMMMMMMMMMMMMMMMMMMMMMM(PODVector<KKKKKKKK>& code)
{
	CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
	PODVector<KKKKKKKK> styleMap_;

	


	CCCCCCCC
	KKKKKK styleMap_;
}